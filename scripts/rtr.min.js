;(function (t) {
  typeof define == 'function' && define.amd ? define(t) : t()
})(function () {
  'use strict'
  var R = Object.defineProperty
  var b = (t, n, e) => (n in t ? R(t, n, { enumerable: !0, configurable: !0, writable: !0, value: e }) : (t[n] = e))
  var C = (t, n, e) => (b(t, typeof n != 'symbol' ? n + '' : n, e), e)
  const t = (d) => {
      for (let o of document.cookie.split(';')) {
        const [c, s] = o.split('=')
        if (d == c.trim()) return decodeURIComponent(s)
      }
      return null
    },
    n = () => `${Date.now()}${Math.random() * 1e16}`,
    e = (...d) => {
      console.log('%c[reTracker]:', 'color: black; font-weight: bold', ...d)
    },
    v = 'https://artel.reboost.ai/data',
    O = 'rid',
    f = 'rtr_sid',
    M = 'campaign_id',
    w = 'utm_source',
    U = 'utm_medium',
    S = '_ga',
    T = '_ym_uid',
    A = '_fbp'
  var u
  ;((d) => {
    let o = '',
      c = '',
      s = '',
      l = '',
      m = '',
      g = '',
      E = '',
      _ = '',
      p = '',
      h = '',
      I = []
    class K {
      constructor({ events: i, uid: r }) {
        C(this, 'uid')
        ;(o = t(O)), e('rid =', o)
        let k = sessionStorage.getItem(f)
        e('sid =', k),
          (s = n()),
          e('vid =', s),
          (l = t(S)),
          (m = t(T)),
          (g = t(A)),
          e('External analytics ids:', { clientGoogleID: l, clientYandexID: m, clientMetaID: g }),
          (this.uid = r),
          e('Initial uid =', this.uid),
          (I = i),
          (E = this.getCampaignId()),
          (_ = this.getUtmSource()),
          (p = this.getUtmMedium()),
          (h = document.referrer),
          e('Collected events before init:', I)
        for (let D of I) this.pushEventHandler(D)
      }
      getCampaignId() {
        return t(M)
      }
      getUtmSource() {
        return t(w)
      }
      getUtmMedium() {
        return t(U)
      }
      pushEventHandler(i) {
        let r = {
          rid: o,
          uid: this.uid,
          sid: c,
          vid: s,
          en: i.name,
          ts: Date.now(),
          gaid: l,
          yaid: m,
          fbid: g,
          campaignId: E,
          utmSource: _,
          utmMedium: p,
          referrer: h,
          ...(i.payload || {}),
        }
        e('ðŸ¡² Send data:', r), navigator.sendBeacon(v, JSON.stringify(r))
      }
      setUserId(i) {
        ;(this.uid = String(i)), e('Set uid =', this.uid)
      }
      pushEvent(i) {
        let r = { ...i, timeStamp: Date.now() }
        e('ðŸ¡° Push event:', r), this.pushEventHandler(r)
      }
    }
    d.TrackerMain = K
  })(u || (u = {}))
  const a = new u.TrackerMain({ events: window.rtr.events, uid: window.rtr.uid })
  ;(window.rtr.setUserId = a.setUserId),
    (window.rtr.pushEvent = a.pushEvent),
    (window.rtr.pushEventHandler = a.pushEventHandler),
    (window.rtr.getCampaignId = a.getCampaignId)
})
